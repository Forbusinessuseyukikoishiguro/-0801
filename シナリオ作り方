# 新人エンジニア向け：シナリオテストとテストケース解説

## まず基本から理解しよう

### テストケースって何？
**テストケース**は「この機能が正しく動くかチェックするための設計書」です。

例えば、ログイン機能をテストする場合：
```
テストケース：正しいIDとパスワードでログイン
1. 入力：正しいユーザーID「user123」
2. 入力：正しいパスワード「password456」
3. 「ログイン」ボタンをクリック
4. 期待結果：ホーム画面に遷移する
```

### シナリオテストって何？
**シナリオテスト**は「実際のユーザーの行動を真似したテスト」です。

一つの機能だけでなく、ユーザーが実際に行う一連の操作をテストします。

## 具体例で理解しよう

### ❌ 単体テスト（一つずつのテスト）
- ログイン機能だけテスト
- 商品検索機能だけテスト  
- 決済機能だけテスト

### ✅ シナリオテスト（つながりのテスト）
**「商品を購入する」シナリオ**
1. サイトにアクセス
2. ログイン
3. 商品を検索
4. 商品詳細を確認
5. カートに入れる
6. 決済手続き
7. 注文完了

## なぜシナリオテストが重要？

### 実際にあった問題例
- ログイン機能は単体では動くが、商品検索後にログアウトしてしまう
- 決済機能は動くが、カートの商品情報が正しく渡らない
- 各機能は正常だが、連続して使うと動作が遅くなる

→ **単体テストだけでは見つからない問題**がある！

## 新人が覚えておくべきポイント

### 1. テストケース作成のコツ
```
【悪い例】
「ログインをテストする」

【良い例】
- 正しいID・パスワードでログイン → 成功
- 間違ったパスワードでログイン → エラーメッセージ表示
- 空欄でログイン → 入力促進メッセージ表示
```

### 2. シナリオテストの進め方
1. **ユーザーの立場で考える**：「自分がこのサービスを使うなら？」
2. **よくある操作パターンを洗い出す**
3. **手順を詳細に書き出す**
4. **実際に操作してみる**

### 3. 実務でのコツ
- **小さく始める**：いきなり複雑なシナリオは作らない
- **記録を残す**：テスト結果は必ずメモする
- **チームで共有**：他の人にもわかるように書く

## よくある新人の疑問

**Q: どこまで細かくテストすればいい？**
A: 「ユーザーが困るかどうか」で判断。重要な機能ほど詳細にテスト。

**Q: 時間がない時はどうする？**
A: 優先度をつける。「必ず使う機能」から順番にテスト。

**Q: バグを見つけたらどうする？**
A: すぐに開発者に報告。「いつ・何を・どうしたら・どうなった」を明確に。

シナリオテストは、ユーザーに良い体験を提供するために欠かせない作業です。最初は大変ですが、慣れると「ユーザー目線」でシステムを見る力が身につきますよ！


# 新人エンジニア向け：シナリオテストとテストケース解説（テンプレート付き）

## まず基本から理解しよう

### テストケースって何？
**テストケース**は「この機能が正しく動くかチェックするための設計書」です。

例えば、ログイン機能をテストする場合：
```
テストケース：正しいIDとパスワードでログイン
1. 入力：正しいユーザーID「user123」
2. 入力：正しいパスワード「password456」
3. 「ログイン」ボタンをクリック
4. 期待結果：ホーム画面に遷移する
```

### シナリオテストって何？
**シナリオテスト**は「実際のユーザーの行動を真似したテスト」です。

一つの機能だけでなく、ユーザーが実際に行う一連の操作をテストします。

## 具体例で理解しよう

### ❌ 単体テスト（一つずつのテスト）
- ログイン機能だけテスト
- 商品検索機能だけテスト  
- 決済機能だけテスト

### ✅ シナリオテスト（つながりのテスト）
**「商品を購入する」シナリオ**
1. サイトにアクセス
2. ログイン
3. 商品を検索
4. 商品詳細を確認
5. カートに入れる
6. 決済手続き
7. 注文完了

## なぜシナリオテストが重要？

### 実際にあった問題例
- ログイン機能は単体では動くが、商品検索後にログアウトしてしまう
- 決済機能は動くが、カートの商品情報が正しく渡らない
- 各機能は正常だが、連続して使うと動作が遅くなる

→ **単体テストだけでは見つからない問題**がある！

---

# 📝 実務で使えるテンプレート集

## 1. テストケーステンプレート

```
【テストケース番号】TC001
【テスト項目名】ログイン機能_正常系
【テスト概要】正しいユーザーID・パスワードでログインできること
【前提条件】
- ユーザーアカウントが登録済み
- ログイン画面が表示されている

【テスト手順】
1. ユーザーID欄に「testuser01」を入力
2. パスワード欄に「password123」を入力  
3. 「ログイン」ボタンをクリック

【期待結果】
- ホーム画面に遷移する
- 画面右上にユーザー名「testuser01」が表示される

【実際の結果】
（テスト実行後に記入）

【判定】
□ 合格　□ 不合格

【備考】
（気づいた点があれば記入）
```

## 2. シナリオテストテンプレート

```
【シナリオ名】商品購入フロー
【テスト目的】ユーザーが商品を購入完了まで問題なく操作できること
【想定ユーザー】一般ユーザー（初回購入）
【実施日】2025/XX/XX
【テスター】山田太郎

【事前準備】
- テスト用商品データの登録
- テスト用ユーザーアカウントの準備
- テスト環境の動作確認

【シナリオ手順】
┌─────────────────────────────┐
│ステップ1：サイトアクセス            │
├─────────────────────────────┤
│操作：ブラウザでサイトURLにアクセス   │
│期待結果：トップページが正常表示      │
│実際結果：                         │
│判定：□OK □NG                     │
└─────────────────────────────┘

┌─────────────────────────────┐
│ステップ2：ユーザーログイン          │
├─────────────────────────────┤
│操作：ID「test123」、PW「pass456」   │
│     でログイン                    │
│期待結果：ログイン成功、ホーム画面遷移│
│実際結果：                         │
│判定：□OK □NG                     │
└─────────────────────────────┘

┌─────────────────────────────┐
│ステップ3：商品検索                │
├─────────────────────────────┤
│操作：検索欄に「スマートフォン」入力  │
│期待結果：関連商品が一覧表示        │
│実際結果：                         │
│判定：□OK □NG                     │
└─────────────────────────────┘

【総合判定】
□ 全ステップ成功
□ 一部問題あり（詳細を備考欄に記載）
□ 重大な問題あり

【発見した問題】
1. 
2. 
3. 

【改善提案】
1. 
2. 
```

## 3. バグ報告テンプレート

```
【バグ報告書】
【報告日】2025/XX/XX
【発見者】山田太郎
【重要度】□高 □中 □低

【発生環境】
- OS：Windows 11
- ブラウザ：Chrome 最新版
- 画面サイズ：1920×1080

【現象】
（何が起こったかを簡潔に）

【再現手順】
1. 
2. 
3. 

【期待動作】
（本来どうなるべきか）

【実際の動作】
（実際に何が起こったか）

【スクリーンショット】
（可能であれば添付）

【その他】
（補足情報があれば）
```

## 4. テスト計画テンプレート

```
【テスト計画書】
【プロジェクト名】ECサイトリニューアル
【テスト期間】2025/XX/XX ～ 2025/XX/XX
【テスト責任者】佐藤花子

【テスト対象機能】
□ ユーザー登録・ログイン
□ 商品検索・表示
□ カート機能
□ 決済機能
□ 注文管理

【テストの種類】
□ 単体テスト
□ 統合テスト
□ シナリオテスト
□ パフォーマンステスト

【重点テスト項目】
1. 決済処理の正確性
2. 個人情報の適切な扱い
3. レスポンス速度

【リスク】
- 決済システム連携でのデータ不整合
- 大量アクセス時のパフォーマンス低下

【成功基準】
- 重大バグ：0件
- 中程度バグ：5件以下
- 軽微バグ：20件以下
```

## 新人が覚えておくべきポイント

### 1. テストケース作成のコツ
```
【悪い例】
「ログインをテストする」

【良い例】
- 正しいID・パスワードでログイン → 成功
- 間違ったパスワードでログイン → エラーメッセージ表示
- 空欄でログイン → 入力促進メッセージ表示
```

### 2. シナリオテストの進め方
1. **ユーザーの立場で考える**：「自分がこのサービスを使うなら？」
2. **よくある操作パターンを洗い出す**
3. **手順を詳細に書き出す**
4. **実際に操作してみる**

### 3. 実務でのコツ
- **小さく始める**：いきなり複雑なシナリオは作らない
- **記録を残す**：テスト結果は必ずメモする
- **チームで共有**：他の人にもわかるように書く
- **テンプレートを活用**：毎回一から作らず、テンプレートを使い回す

## よくある新人の疑問

**Q: どこまで細かくテストすればいい？**
A: 「ユーザーが困るかどうか」で判断。重要な機能ほど詳細にテスト。

**Q: 時間がない時はどうする？**
A: 優先度をつける。「必ず使う機能」から順番にテスト。

**Q: バグを見つけたらどうする？**
A: すぐに開発者に報告。「いつ・何を・どうしたら・どうなった」を明確に。

**Q: テンプレートはそのまま使っていい？**
A: プロジェクトに合わせてカスタマイズしてください。項目の追加・削除は自由です。

シナリオテストは、ユーザーに良い体験を提供するために欠かせない作業です。最初は大変ですが、テンプレートを活用して慣れると「ユーザー目線」でシステムを見る力が身につきますよ！
